{"version":3,"sources":["Bird.js"],"names":["State","cc","Enum","Ready","Rise","FreeFall","Drop","Dead","Class","statics","extends","Component","properties","initRiseSpeed","gravity","state","default","type","ground","Node","init","game","currentSpeed","anim","getComponent","Animation","update","dt","_updatePosition","_updateState","_detectCollision","_fixBirdFinalPosition","flying","h","director","getVisibleSize","height","node","y","_runFallAction","rise","_runRiseAction","startFly","_getNextPipe","stop","stopAllActions","jumpAction","rotateTo","easing","easeCubicActionOut","runAction","duration","dropAction","easeCubicActionIn","_runDropAction","nextPipe","pipeManager","getNext","collideWithPipe","_detectCollisionWithBird","topPipe","bottomPipe","collideWithGround","gameOver","birdLeft","x","pipeRight","width","crossPipe","gainScore","otherNode","rectIntersectsRect","getBoundingBoxToWorld"],"mappings":"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","file":"Bird.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["const State = cc.Enum({\n    /** 游戏开始前的准备状态 */\n    Ready: -1,\n    /** 小鸟上升中 */\n    Rise: -1,\n    /** 小鸟自由落体中 */\n    FreeFall: -1,\n    /** 小鸟碰撞到管道坠落中 */\n    Drop: -1,\n    /** 小鸟已坠落到地面静止 */\n    Dead: -1,\n});\n\ncc.Class({\n    statics: {\n        State: State\n    },\n\n    extends: cc.Component,\n\n    properties: {\n        /** 上抛初速度，单位：像素/秒 */\n        initRiseSpeed: 800,\n        /** 重力加速度，单位：像素/秒的平方 */\n        gravity: 1000,\n        /** 小鸟的状态 */\n        state: {\n            default: State.Ready,\n            type: State,\n        },\n        /** 地面节点 */\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n    },\n\n    init(game) {\n        this.game = game;\n        this.state = State.Ready;\n        this.currentSpeed = 0;//初始化当前的速度\n        this.anim = this.getComponent(cc.Animation);//获取动画组件\n    },\n    update(dt) {\n        if (this.state === State.Ready || this.state === State.Dead) {//如果是住呢比或者死亡状态则停止计算\n            return;\n        }\n        this._updatePosition(dt);\n        this._updateState(dt);\n        this._detectCollision();\n        this._fixBirdFinalPosition();\n\n    },\n    _updatePosition(dt) {\n        var flying = this.state === State.Rise\n            || this.state === State.FreeFall\n            || this.state === State.Drop;//判断小鸟是否处于飞行状态\n        if (flying) {//如果处于飞行状态\n            var h = cc.director.getVisibleSize().height / 2;\n            if (this.node.y >= h) {//当小鸟的高度超过上边的时候，让小鸟的位置和速度降下来\n                this.node.y = h - 1;\n                this.currentSpeed = -1;\n            } else {\n                this.currentSpeed -= dt * this.gravity;//根据预先设置好的重力计算当前的速度\n                this.node.y += dt * this.currentSpeed;//根据计算出来的y轴速度，计算出当前小鸟的位置\n            }\n        }\n    },\n\n    _updateState(dt) {\n        switch (this.state) {\n            case State.Rise://当当前状态是飞起的时候，如果速度小于零了，则转换为自由下落状态\n                if (this.currentSpeed < 0) {\n                    this.state = State.FreeFall;\n                    this._runFallAction();\n                }\n                break;\n        }\n    },\n    //起飞函数\n    rise() {\n        this.state = State.Rise;\n        this.currentSpeed = this.initRiseSpeed;\n        this._runRiseAction();\n    },\n    //开始起飞\n    startFly() {\n        this._getNextPipe();\n        this.anim.stop(\"birdFlapping\");\n        this.rise();\n    },\n    //向上飞的角度偏移\n    _runRiseAction() {\n        this.node.stopAllActions();\n        let jumpAction = cc.rotateTo(0.3, -30).easing(cc.easeCubicActionOut());\n        this.node.runAction(jumpAction);\n    },\n\n    //下落的角度偏移\n    _runFallAction(duration = 0.6) {\n        this.node.stopAllActions();\n        let dropAction = cc.rotateTo(duration, 90).easing(cc.easeCubicActionIn());\n        this.node.runAction(dropAction);\n    },\n\n    //当小鸟碰撞到管道的时候坠落的角度偏移\n    _runDropAction() {\n        if (this.currentSpeed > 0) {\n            this.currentSpeed = 0;\n        }\n        this._runFallAction(0.4);\n    },\n    _getNextPipe() {\n        this.nextPipe = this.game.pipeManager.getNext();\n    },\n    _detectCollision() {\n        if (!this.nextPipe) {\n            return;\n        }\n        if (this.state === State.Ready || this.state === State.Dead || this.state === State.Drop) {\n            return;\n        }\n        let collideWithPipe = false;\n        // 检测小鸟与上方管子的碰撞\n        if (this._detectCollisionWithBird(this.nextPipe.topPipe)) {\n            collideWithPipe = true;\n        }\n        // 检测小鸟与下方管子的碰撞\n        if (this._detectCollisionWithBird(this.nextPipe.bottomPipe)) {\n            collideWithPipe = true;\n        }\n        // 检测小鸟与地面的碰撞\n        let collideWithGround = false;\n        if (this._detectCollisionWithBird(this.ground)) {\n            collideWithGround = true;\n        }\n        // 处理碰撞结果\n        if (collideWithPipe || collideWithGround) {\n            if (collideWithGround) { // 与地面碰撞\n                this.state = State.Dead;\n            } else { // 与水管碰撞\n                this.state = State.Drop;\n                this._runDropAction();\n            }\n            this.anim.stop();\n            this.game.gameOver();\n        } else { // 处理没有发生碰撞的情况\n            let birdLeft = this.node.x;\n            let pipeRight = this.nextPipe.node.x + this.nextPipe.topPipe.width\n            let crossPipe = birdLeft > pipeRight;\n            if (crossPipe) {\n                this.game.gainScore();\n                this._getNextPipe();\n            }\n        }\n    },\n    _detectCollisionWithBird(otherNode) {\n        return cc.rectIntersectsRect(this.node.getBoundingBoxToWorld(), otherNode.getBoundingBoxToWorld());\n    },\n    /** 修正最后落地位置 */\n    _fixBirdFinalPosition() {\n        if (this._detectCollisionWithBird(this.ground)) {\n            this.node.y = this.ground.y + this.node.width / 2;\n        }\n    },\n});\n"]}