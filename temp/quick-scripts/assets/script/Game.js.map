{"version":3,"sources":["Game.js"],"names":["Bird","require","PipeManager","Scroller","cc","Class","extends","Component","properties","goldScore","silverScore","pipeManager","bird","scoreLabel","Label","maskLayer","default","type","Node","ground","background","readyMenu","gameOverMenu","scoreAudio","url","AudioClip","swooshingAudio","onLoad","score","string","init","_enableInput","_revealScene","active","color","Color","BLACK","runAction","fadeOut","enable","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","node","TOUCH_START","onTouch","off","_startGameOrJumpBird","_hideReadyMenu","sequence","callFunc","state","State","Ready","_gameStart","rise","startSpawn","startFly","gameOver","reset","getComponent","stopScroll","_blinkOnce","_showGameOverMenu","WHITE","fadeTo","gameOverNode","getChildByName","resultBoardNode","startButtonNode","currentScoreNode","bestScoreNode","medalNode","KEY_BEST_SCORE","bestScore","sys","localStorage","getItem","setItem","showMedal","err","spriteFrame","console","log","Sprite","loader","loadRes","showNode","action","callback","audioEngine","playEffect","showNodeFunc","spawn","fadeIn","moveBy","p","moveTo","x","easing","easeCubicActionOut","scheduleOnce","gainScore","restart","director","loadScene"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["\r\nvar Bird = require('Bird');\r\nvar PipeManager = require('PipeManager');\r\nvar Scroller = require('Scroller');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        /** 得金牌的分数 */\r\n        goldScore: 30,\r\n        /** 得银牌的分数 */\r\n        silverScore: 10,\r\n        /** 管道管理组件 */\r\n        pipeManager: PipeManager,\r\n        /** 小鸟组件 */\r\n        bird: Bird,\r\n        /** 分数显示节点 */\r\n        scoreLabel: cc.Label,\r\n        /** 遮罩节点 */\r\n        maskLayer: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        /** 地面节点 */\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        /** 背景节点 */\r\n        background: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        /** 准备开始菜单节点 */\r\n        readyMenu: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        /** 游戏结束的菜单节点 */\r\n        gameOverMenu: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 得分音效\r\n        scoreAudio:{\r\n            default:null,\r\n            url:cc.AudioClip\r\n        },\r\n        // 按钮节点，点击浮现时的声音\r\n        swooshingAudio:{\r\n            default:null,\r\n            url:cc.AudioClip\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.score = 0;\r\n        this.scoreLabel.string = this.score;\r\n        this.bird.init(this);\r\n        this._enableInput(true);\r\n        this._revealScene();\r\n    },\r\n    _revealScene() {\r\n        this.maskLayer.active = true;\r\n        this.maskLayer.color = cc.Color.BLACK;\r\n        this.maskLayer.runAction(cc.fadeOut(0.3));\r\n    },\r\n\r\n    _enableInput(enable) {\r\n        if (enable) {\r\n            cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            this.node.on(cc.Node.EventType.TOUCH_START, this.onTouch, this);\r\n        } else {\r\n            cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            this.node.off(cc.Node.EventType.TOUCH_START, this.onTouch, this);\r\n        }\r\n    },\r\n    onKeyDown() {\r\n        this._startGameOrJumpBird();\r\n    },\r\n\r\n    onTouch() {\r\n        this._startGameOrJumpBird();\r\n        return true;\r\n    },\r\n    _hideReadyMenu() {\r\n        this.readyMenu.runAction(\r\n            cc.sequence(\r\n                cc.fadeOut(0.5),\r\n                cc.callFunc(() => {\r\n                    this.readyMenu.active = false;\r\n                }, this)\r\n            )\r\n        );\r\n    },\r\n    //开始或者飞行\r\n    _startGameOrJumpBird() {\r\n        if (this.bird.state === Bird.State.Ready) {\r\n            this._gameStart();\r\n        } else {\r\n            this.bird.rise();//继续飞行\r\n        }\r\n    },\r\n    //游戏开始\r\n    _gameStart() {\r\n        this._hideReadyMenu();//隐藏menu\r\n        this.pipeManager.startSpawn();//生产管道\r\n        this.bird.startFly();//开始飞行\r\n    },\r\n    gameOver() {\r\n        this.pipeManager.reset();\r\n        this.ground.getComponent(Scroller).stopScroll();//地板停止滚动\r\n        this.background.getComponent(Scroller).stopScroll();//背景停止滚动\r\n        this._enableInput(false);//停止接受事件\r\n        this._blinkOnce();//闪烁一下\r\n        this._showGameOverMenu();//显示有些结束菜单\r\n    },\r\n\r\n    /** 屏幕闪烁一下 */\r\n    _blinkOnce() {\r\n        this.maskLayer.color = cc.Color.WHITE;\r\n        this.maskLayer.runAction(\r\n            cc.sequence(\r\n                cc.fadeTo(0.1, 200),\r\n                cc.fadeOut(0.1)\r\n            )\r\n        );\r\n    },\r\n    _showGameOverMenu() {\r\n        // 隐藏分数\r\n        this.scoreLabel.node.runAction(\r\n            cc.sequence(\r\n                cc.fadeOut(0.3),\r\n                cc.callFunc(() => {\r\n                    this.scoreLabel.node.active = false;\r\n                }, this)\r\n            )\r\n        );\r\n\r\n        // 获取游戏结束界面的各个节点\r\n        let gameOverNode = this.gameOverMenu.getChildByName(\"gameOverLabel\");\r\n        let resultBoardNode = this.gameOverMenu.getChildByName(\"resultBoard\");\r\n        let startButtonNode = this.gameOverMenu.getChildByName(\"startButton\");\r\n        let currentScoreNode = resultBoardNode.getChildByName(\"currentScore\");\r\n        let bestScoreNode = resultBoardNode.getChildByName(\"bestScore\");\r\n        let medalNode = resultBoardNode.getChildByName(\"medal\");\r\n\r\n        // 保存最高分到本地\r\n        const KEY_BEST_SCORE = \"bestScore\";\r\n        let bestScore = cc.sys.localStorage.getItem(KEY_BEST_SCORE);\r\n        if (bestScore === \"null\" || this.score > bestScore) {\r\n            bestScore = this.score;\r\n        }\r\n        cc.sys.localStorage.setItem(KEY_BEST_SCORE, bestScore);\r\n\r\n        // 显示当前分数、最高分\r\n        currentScoreNode.getComponent(cc.Label).string = this.score;\r\n        bestScoreNode.getComponent(cc.Label).string = bestScore;\r\n\r\n        // 决定是否显示奖牌\r\n        let showMedal = (err, spriteFrame) => {\r\n            if(err){\r\n                 console.log(\"error:\"+err)  \r\n                 return\r\n            }\r\n         \r\n            medalNode.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n        };\r\n        if (this.score >= this.goldScore  ) { // 显示金牌\r\n            console.log(\"金牌啦\")\r\n            // medalNode.getComponent(cc.Sprite).spriteFrame = spriteFrame.getSpringFrame(\"medal_gold\");\r\n            cc.loader.loadRes(\"image/medal_gold.png/medal_gold\", showMedal);\r\n        } else if (this.score >= this.silverScore) { // 显示银牌\r\n            cc.loader.loadRes(\"image/medal_silver.png/medal_silver\", showMedal);\r\n            // medalNode.getComponent(cc.Sprite).spriteFrame = spriteFrame.getSpringFrame(\"medal_sliver\");\r\n\r\n        } \r\n        // else{\r\n        //     showMedal();\r\n        // }\r\n        \r\n        // if(this.score > 0){\r\n        //     cc.loader.loadRes(\"image\",cc.SpriteAtlas,showMedal)\r\n        // }\r\n\r\n        // 依次显示各个节点\r\n        var showNode = (node, action, callback) => {\r\n            startButtonNode.active = true;\r\n            cc.audioEngine.playEffect(this.swooshingAudio)\r\n            node.runAction(cc.sequence(\r\n                action,\r\n                cc.callFunc(() => {\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                }, this)\r\n            ));\r\n        };\r\n        this.gameOverMenu.active = true;\r\n        let showNodeFunc = () => showNode(\r\n            gameOverNode,\r\n            cc.spawn(\r\n                cc.fadeIn(0.2),\r\n                cc.sequence(\r\n                    cc.moveBy(0.2, cc.p(0, 10)),\r\n                    cc.moveBy(0.5, cc.p(0, -10))\r\n                )\r\n            ),\r\n            () => showNode(\r\n                resultBoardNode,\r\n                cc.moveTo(0.5, cc.p(resultBoardNode.x, 0)).easing(cc.easeCubicActionOut()),\r\n                () => showNode(\r\n                    startButtonNode,\r\n                    cc.fadeIn(0.5))\r\n            )\r\n        );\r\n        this.scheduleOnce(showNodeFunc, 0.55);\r\n    },\r\n    gainScore() {\r\n        this.score++;\r\n        this.scoreLabel.string = this.score;\r\n        cc.audioEngine.playEffect(this.scoreAudio)\r\n    },\r\n    /** 点击游戏结束菜单中的重新开始游戏按钮会调用此方法 */\r\n    restart() {\r\n        this.maskLayer.color = cc.Color.BLACK;\r\n        this.maskLayer.runAction(\r\n            cc.sequence(\r\n                cc.fadeIn(0.3),\r\n                cc.callFunc(() => {\r\n                    // 重新加载场景\r\n                    cc.director.loadScene('game');\r\n                }, this)\r\n            )\r\n        );\r\n        cc.audioEngine.playEffect(this.swooshingAudio)\r\n        \r\n    },\r\n    // update (dt) {},\r\n});\r\n"]}